{
  "swagger": "2.0",
  "info": {
    "description": "API Documrntation for Snicks, the ecommerce store for mens sneakers at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.",
    "version": "1.0.0",
    "title": "API Documentation for Snicks",
    "contact": {
      "email": "stepheng323@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:4000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "user",
      "description": "Operations about user",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    }
  ],
  "schemes": ["http", "https"],
  "paths": {
    "/user": {
      "post": {
        "tags": ["user"],
        "summary": "Create user",
        "description": "A person can creat an account.",
        "operationId": "createUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserLoginResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/UserSignupConflict"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ServerError"
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": ["user"],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The email for login",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserLoginResponse"
            }
          },
          "400": {
            "description": "Invalid login parameters",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Invalid email/password combination",
            "schema": {
              "$ref": "#/definitions/InvalidLogin"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ServerError"
            }
          }
        }
      }
    },
    "/user/forgot-password": {
      "post": {
        "tags": ["user"],
        "summary": "User make a password rest request",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Email address",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
     
          },
          "400": {
            "description": "Invalid login parameters",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ServerError"
            }
          }
        }
      }
    },
    "/user/reset-forgot-password": {
      "post": {
        "tags": ["user"],
        "summary": "User make a password rest",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "resetToken",
            "in": "query",
            "description": "Reset Token",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref":"#/definitions/PasswordUpdatedResponse"
            }
     
          },
          "400": {
            "description": "Invalid parameters",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ServerError"
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "UserLogin": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "stepheng323@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "olaTUNDELA234"
        }
      }
    },
    "UserLoginResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "message": {
          "type": "string",
          "example": "User logged in successfully"
        },
        "payload": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "example": 1
            },
            "email": {
              "type": "string",
              "example": "stepheng323@gmail.com"
            },
            "firstName": {
              "type": "string",
              "example": "Jon"
            },
            "lastName": {
              "type": "string",
              "example": "Doe"
            },
            "phone": {
              "type": "string",
              "example": "09239944955"
            },
            "role": {
              "type": "string",
              "example": "user"
            },
            "token": {
              "type": "string",
              "example": "eejffioffhbdbfdkfhfdhlfkd.fdbhdhfldhfyofhbdfdfvgdvfgdkjf.fdgkvfvgdfvdjhfldogvkdsfgdls"
            },
            "tokenExpiry": {
              "type": "integer",
              "example": 2873844984
            }
    
          }
        }
      }
    },
    "PasswordUpdatedResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "message": {
          "type": "string",
          "example": "User logged in successfully"
        },
        "payload": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "example": 1
            },
            "email": {
              "type": "string",
              "example": "stepheng323@gmail.com"
            },
            "firstName": {
              "type": "string",
              "example": "Jon"
            },
            "lastName": {
              "type": "string",
              "example": "Doe"
            },
            "phone": {
              "type": "string",
              "example": "09239944955"
            },
            "role": {
              "type": "string",
              "example": "user"
            },
            "token": {
              "type": "string",
              "example": "eejffioffhbdbfdkfhfdhlfkd.fdbhdhfldhfyofhbdfdfvgdvfgdkjf.fdgkvfvgdfvdjhfldogvkdsfgdls"
            },
            "tokenExpiry": {
              "type": "integer",
              "example": 2873844984
            }
    
          }
        }
      }
    },
    "CreateUser": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "example": "stepheng323@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "12345"
        },
        "phone": {
          "type": "string",
          "example": "080888348"
        },
        "role": {
          "type": "string",
          "example": "user"
        },
        "token": {
          "type": "string",
          "example": "eejffioffhbdbfdkfhfdhlfkd.fdbhdhfldhfyofhbdfdfvgdvfgdkjf.fdgkvfvgdfvdjhfldogvkdsfgdls"
        },
        "tokenExpiry": {
          "type": "integer",
          "example": 2873844984
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "UserSignupConflict": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "message": {
          "type": "string",
          "example": "a user with the email exist"
        },
        "payload": {
          "type": "object"
        }
      }
    },
    "InvalidLogin": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "message": {
          "type": "string",
          "example": "Invalid email/password combination"
        }
      }
    },
    "BadRequest": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "message": {
          "type": "string",
          "example": "firstname is required"
        }
      }
    },
    "ServerError": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "message": {
          "type": "string",
          "example": "Internal Server Error"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
